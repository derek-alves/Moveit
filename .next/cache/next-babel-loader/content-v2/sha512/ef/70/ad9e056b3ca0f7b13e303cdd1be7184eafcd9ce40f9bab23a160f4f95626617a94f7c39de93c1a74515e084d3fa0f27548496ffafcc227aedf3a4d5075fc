{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/derek-alves/Documentos/moveit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/derek-alves/Documentos/moveit/src/components/CountDown.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport styles from \"../styles/components/CountDown.module.css\";\n\nvar CountDown = function CountDown() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, \"0\").split(\"\"),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, \"0\").split(\"\"),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsLeft = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1];\n\n  function startCountDown() {\n    setActive(true);\n  }\n\n  useEffect(function () {\n    if (active && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [active, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.countDownContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.timerCounterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: startCountDown,\n      className: styles.countDownButton,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CountDown, \"3EKOgXtVEHwLiPshhAxw55JPutw=\");\n\n_c = CountDown;\nexport default CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["/home/derek-alves/Documentos/moveit/src/components/CountDown.tsx"],"names":["useState","useEffect","styles","CountDown","time","setTime","active","setActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondsLeft","secondsRight","startCountDown","setTimeout","countDownContainer","timerCounterContainer","countDownButton"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;;AAEA,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAAA;;AAAA,kBACRH,QAAQ,CAAC,KAAK,EAAN,CADA;AAAA,MACzBI,IADyB;AAAA,MACnBC,OADmB;;AAAA,mBAEJL,QAAQ,CAAC,KAAD,CAFJ;AAAA,MAEzBM,MAFyB;AAAA,MAEjBC,SAFiB;;AAIhC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AALgC,8BAOEQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAPF;AAAA;AAAA,MAOzBC,UAPyB;AAAA,MAObC,WAPa;;AAAA,+BAQIJ,MAAM,CAACD,OAAD,CAAN,CACjCE,QADiC,CACxB,CADwB,EACrB,GADqB,EAEjCC,KAFiC,CAE3B,EAF2B,CARJ;AAAA;AAAA,MAQzBG,WARyB;AAAA,MAQZC,YARY;;AAYhC,WAASC,cAAT,GAA0B;AACxBZ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAEDN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,MAAM,IAAIF,IAAI,GAAG,CAArB,EAAwB;AACtBgB,MAAAA,UAAU,CAAC,YAAM;AACff,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAACE,MAAD,EAASF,IAAT,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACmB,kBAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACoB,qBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA,gCACE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAYE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAEC,cAFX;AAGE,MAAA,SAAS,EAAEjB,MAAM,CAACqB,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CA9CD;;GAAMpB,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport styles from \"../styles/components/CountDown.module.css\";\n\nconst CountDown: React.FC = () => {\n  const [time, setTime] = useState(25 * 60);\n  const [active, setActive] = useState(false);\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondsLeft, secondsRight] = String(seconds)\n    .padStart(2, \"0\")\n    .split(\"\");\n\n  function startCountDown() {\n    setActive(true);\n  }\n\n  useEffect(() => {\n    if (active && time > 0) {\n      setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [active, time]);\n\n  return (\n    <div className={styles.countDownContainer}>\n      <div className={styles.timerCounterContainer}>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondsLeft}</span>\n          <span>{secondsRight}</span>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        onClick={startCountDown}\n        className={styles.countDownButton}\n      >\n        Iniciar um ciclo\n      </button>\n    </div>\n  );\n};\n\nexport default CountDown;\n"]},"metadata":{},"sourceType":"module"}